name: Code Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Configure SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add remote host to known_hosts
        run: |
          ssh-keyscan -p ${{ secrets.REMOTE_PORT }} ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts
          
      - name: Create real.env file
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> real.env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> real.env
          echo "DB_USER=${{ secrets.DB_USER }}" >> real.env
          echo "DB_PW=${{ secrets.DB_PW }}" >> real.env

      - name: Copy project files to remote server
        run: |
          scp -P ${{ secrets.REMOTE_PORT }} \
              -i ~/.ssh/id_rsa \
              -o StrictHostKeyChecking=no \
              -r ./* \
              ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:${{ secrets.REMOTE_TARGET }}

      - name: Copy env file to remote server
        run: |
          scp -P ${{ secrets.REMOTE_PORT }} \
              -i ~/.ssh/id_rsa \
              -o StrictHostKeyChecking=no \
              real.env \
              ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:${{ secrets.REMOTE_TARGET }}

      - name: Restart uvicorn server
        run: |
          ssh -p ${{ secrets.REMOTE_PORT }} \
              -i ~/.ssh/id_rsa \
              -o StrictHostKeyChecking=no \
              ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << 'EOSSH'
                echo ">>> Stopping existing uvicorn process..."
                pkill -f "uvicorn" || echo "No uvicorn process found"
          
                source .venv/bin/activate

                echo ">>> Installing requirements..."
                cd ${{ secrets.REMOTE_TARGET }}
                python -m pip install -r requirements.txt

                echo ">>> Starting uvicorn with reload and custom logging..."
                nohup python -m uvicorn main.app:app \
                  --host 0.0.0.0 \
                  --port 8000 \
                  --log-config logging_config.ini \
                  > uvicorn.log 2>&1 &
                echo ">>> Done. Uvicorn is restarted in background."
          EOSSH